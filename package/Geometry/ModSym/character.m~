// characters and character groups to be used in 

declare type GrpDrch [GrpDrchElt];

declare attributes GrpDrch:  // Call this GrpDrch object G.
   BaseRing,      // The base ring R over which the characters are defined
   RootOf1,       // A root of unity z in R^*
   PowersOfRoot,  // [z,z^2,z^3,...,z^r], where z has order r.
   OrderOfRoot,   // r = Order of z, where z is RootOf1.
   Modulus,       // The modulus N
   Exponent,      // Exponent of the group (Z/N)^*
   UGroup,        // A group such that 
   UnitsMap,      //    UnitsMap:  A -> (Z/N)^* is an isomorphism
   Elements,      // Sequence of all elements of G.
   OrdersUGroup,  // The orders of the standard generators of (Z/N)^*
   OrdersGens,    // Orders of the generators of G.
   Images,        // Images of the chosen generators of G; these are powers of z.
   Labels,        // Labels of the standard generators
   AbGrp,         // An abelian group isomorphic to this Dirichlet group,
                  // so AbGrp is the r-torsion in UGroup.
   AbGrpMap,      // Invertible homomorphism AbGrp ----> G.
   EltArray,      // Associative array indexed by G`AbGrp storing elements of G. (Added April 2009, SRD)
   NF, Pairing, Residue_map, Zeta,
   DecompositionParents, // list, used in Decomposition
   ValsAtMinus1;  // Sequence of values at -1 of the generators of the *full* group of the same modulus

declare type GrpDrchElt;

declare attributes GrpDrchElt: 
   Parent,
   BaseRing,      // = x`Parent`BaseRing
   Modulus,       // = x`Parent`Modulus
   Conductor,     // Smallest M such that (Z/N)^* --> R^* factors through (Z/M)^*.
   Element,       // Corresponding element of (Z/N)^* (see comments far below),
                  // which represents this Dirichlet group element.
   ValueList,     // [Evaluate(eps,i) : i in [1..m]];   (useful sometimes for efficiency).
   GaussSum;
